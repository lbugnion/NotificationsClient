# Xamarin.Android and Xamarin.UWP
# Build a Xamarin.Android and Xamarin.UWP app.
# Add steps that test, sign, and distribute the app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
 branches:
  include:
   - master
 paths:
  include:
  - NotificationsClient/*

variables:
  solution: NotificationsClient.sln
  androidproject: NotificationsClient.Android.csproj
  windowsproject: NotificationsClient.UWP.csproj

jobs:

- job: Android
  pool:
    vmImage: 'windows-2019'

  variables:
    buildConfiguration: 'Release'
    outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'
    solution: '$(solution)'

  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: XamarinAndroid@1
    inputs:
      projectFile: '**/$(androidproject)'
      outputDirectory: '$(outputDirectory)'
      configuration: '$(buildConfiguration)'

  - task: AndroidSigning@3
    inputs:
      apksign: false
      zipalign: false
      apkFiles: '$(outputDirectory)/*.apk'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(outputDirectory)'

- job: Windows
  pool:
    vmImage: 'windows-2019'

  variables:
    solution: '$(solution)'
    buildPlatform: 'x86|x64|ARM'
    buildConfiguration: 'Release'
    appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

  steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        platform: 'x86'
        solution: '$(solution)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(outputDirectory)'

